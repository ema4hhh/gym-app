---
import Layout from "../../../layouts/Layout.astro";
import Navbar from "../../../layouts/Navbar.astro";
import Footer from "../../../layouts/Footer.astro";
import gymStore from "../../../store/gymStore";
const { userRoutine } = gymStore.getState()

const { workoutId } = Astro.params

const page = userRoutine?.routines.find((workout) => workout.id == workoutId)
    

if (page === undefined) return Astro.redirect("/404");
const { id, name, exercises } = page;
---

<Layout title={name}>
    <Navbar />
    <main>
        <h1>{name}</h1>

        <section class="divide-y-2 divide-black" data-workout-id={id}>
            {
                id === undefined
                    ? <p>Select a workout:</p>

                    : exercises.map((exercise) => (
                        <article class="bg-slate-200 text-slate-900">   
                            <h3>{exercise.name}</h3>
                            <p>sets: {exercise.sets}</p>
                            <p>{exercise.equipment}</p>
                            
                            <ul>
                                {exercise.musclesWorked.map((muscle) => (
                                    <li>{muscle}</li>
                                ))}
                            </ul>
                            <button id={exercise.id.toString()} class="start-button border-black border-2">Start</button>
                        </article>
                    ))
            }
        </section>
    </main>
    <Footer />
</Layout>

<script>
  import gymStore from '../../../store/gymStore';
  
  const { setExercise, workout, setShowCurrentExerciseModal, setWorkout } = gymStore.getState()
  
  const workoutId = document.querySelector("[data-workout-id]")?.getAttribute("data-workout-id")
  
  if (workoutId !== null && workoutId !== undefined) setWorkout(parseInt(workoutId))
  
  const startButtons = document.getElementsByClassName("start-button");
 
  for(const [_, button] of Object.entries(startButtons)) {
    const buttonId = button.id
  
    button.addEventListener("click", () => {      
      const excercise = workout?.exercises.find((exercise) => (exercise.id.toString() === buttonId))
  
      if (excercise) {
        setExercise(excercise)
        setShowCurrentExerciseModal(true)
        return
      }

      console.log("Something is wrong with the exercise");
    })
  }
</script>
